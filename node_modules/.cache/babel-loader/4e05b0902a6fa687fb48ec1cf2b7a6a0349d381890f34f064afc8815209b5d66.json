{"ast":null,"code":"var _jsxFileName = \"/home/xphi/Desktop/react/Upload-And-View-Excel-Files/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [excelFile, setExcelFile] = useState(null);\n  const [typeError, setTypeError] = useState(null);\n  const [excelData, setExcelData] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n  const handleFile = e => {\n    let fileTypes = ['application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'text/csv'];\n    let selectedFile = e.target.files[0];\n    if (selectedFile) {\n      if (selectedFile && fileTypes.includes(selectedFile.type)) {\n        setTypeError(null);\n        let reader = new FileReader();\n        reader.readAsArrayBuffer(selectedFile);\n        reader.onload = e => {\n          setExcelFile(e.target.result);\n        };\n      } else {\n        setTypeError('Please select only excel file types');\n        setExcelFile(null);\n      }\n    } else {\n      console.log('Please select your file');\n    }\n  };\n  const handleFileSubmit = e => {\n    e.preventDefault();\n    if (excelFile !== null) {\n      const workbook = XLSX.read(excelFile, {\n        type: 'buffer'\n      });\n      const worksheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[worksheetName];\n      const data = XLSX.utils.sheet_to_json(worksheet);\n      setExcelData(data);\n      setCurrentPage(1);\n    }\n  };\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = excelData && excelData.slice(indexOfFirstItem, indexOfLastItem);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload & View Excel Sheets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-group custom-form\",\n      onSubmit: handleFileSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        required: true,\n        onChange: handleFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success btn-md\",\n        children: \"UPLOAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), typeError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: typeError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), excelData && excelData.length > itemsPerPage && /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination\",\n        children: Array.from({\n          length: Math.ceil(excelData.length / itemsPerPage)\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${index + 1 === currentPage ? \"active\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-link\",\n            onClick: () => paginate(index + 1),\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer\",\n      children: currentItems ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(currentItems[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: key\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentItems.map((individualExcelData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(individualExcelData).map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: individualExcelData[key]\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 23\n              }, this))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No File is uploaded yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UY3g9MZJB3BJTy8JwajfCS+0EBg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","App","_s","excelFile","setExcelFile","typeError","setTypeError","excelData","setExcelData","currentPage","setCurrentPage","itemsPerPage","handleFile","e","fileTypes","selectedFile","target","files","includes","type","reader","FileReader","readAsArrayBuffer","onload","result","console","log","handleFileSubmit","preventDefault","workbook","read","worksheetName","SheetNames","worksheet","Sheets","data","utils","sheet_to_json","paginate","pageNumber","indexOfLastItem","indexOfFirstItem","currentItems","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","required","onChange","role","length","Array","from","Math","ceil","map","_","index","onClick","Object","keys","key","individualExcelData","_c","$RefreshReg$"],"sources":["/home/xphi/Desktop/react/Upload-And-View-Excel-Files/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport * as XLSX from 'xlsx';\n\nfunction App() {\n  const [excelFile, setExcelFile] = useState(null);\n  const [typeError, setTypeError] = useState(null);\n  const [excelData, setExcelData] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n\n  const handleFile = (e) => {\n    let fileTypes = ['application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'text/csv'];\n    let selectedFile = e.target.files[0];\n    if (selectedFile) {\n      if (selectedFile && fileTypes.includes(selectedFile.type)) {\n        setTypeError(null);\n        let reader = new FileReader();\n        reader.readAsArrayBuffer(selectedFile);\n        reader.onload = (e) => {\n          setExcelFile(e.target.result);\n        }\n      }\n      else {\n        setTypeError('Please select only excel file types');\n        setExcelFile(null);\n      }\n    }\n    else {\n      console.log('Please select your file');\n    }\n  };\n\n  const handleFileSubmit = (e) => {\n    e.preventDefault();\n    if (excelFile !== null) {\n      const workbook = XLSX.read(excelFile, { type: 'buffer' });\n      const worksheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[worksheetName];\n      const data = XLSX.utils.sheet_to_json(worksheet);\n      setExcelData(data);\n      setCurrentPage(1);\n    }\n  };\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = excelData && excelData.slice(indexOfFirstItem, indexOfLastItem);\n\n  return (\n    <div className=\"wrapper\">\n      <h3>Upload & View Excel Sheets</h3>\n\n      {/* Form */}\n      <form className=\"form-group custom-form\" onSubmit={handleFileSubmit}>\n        <input type=\"file\" className=\"form-control\" required onChange={handleFile} />\n        <button type=\"submit\" className=\"btn btn-success btn-md\">UPLOAD</button>\n        {typeError && (\n          <div className=\"alert alert-danger\" role=\"alert\">{typeError}</div>\n        )}\n      </form>\n\n      {/* Pagination */}\n      {excelData && excelData.length > itemsPerPage && (\n        <nav>\n          <ul className=\"pagination\">\n            {Array.from({ length: Math.ceil(excelData.length / itemsPerPage) }).map((_, index) => (\n              <li key={index} className={`page-item ${index + 1 === currentPage ? \"active\" : \"\"}`}>\n                <button className=\"page-link\" onClick={() => paginate(index + 1)}>\n                  {index + 1}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </nav>\n      )}\n\n      {/* View data */}\n      <div className=\"viewer\">\n        {currentItems ? (\n          <div className=\"table-responsive\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  {Object.keys(currentItems[0]).map((key) => (\n                    <th key={key}>{key}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {currentItems.map((individualExcelData, index) => (\n                  <tr key={index}>\n                    {Object.keys(individualExcelData).map((key) => (\n                      <td key={key}>{individualExcelData[key]}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div>No File is uploaded yet!</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMc,YAAY,GAAG,EAAE;EAEvB,MAAMC,UAAU,GAAIC,CAAC,IAAK;IACxB,IAAIC,SAAS,GAAG,CAAC,0BAA0B,EAAE,mEAAmE,EAAE,UAAU,CAAC;IAC7H,IAAIC,YAAY,GAAGF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACpC,IAAIF,YAAY,EAAE;MAChB,IAAIA,YAAY,IAAID,SAAS,CAACI,QAAQ,CAACH,YAAY,CAACI,IAAI,CAAC,EAAE;QACzDb,YAAY,CAAC,IAAI,CAAC;QAClB,IAAIc,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC7BD,MAAM,CAACE,iBAAiB,CAACP,YAAY,CAAC;QACtCK,MAAM,CAACG,MAAM,GAAIV,CAAC,IAAK;UACrBT,YAAY,CAACS,CAAC,CAACG,MAAM,CAACQ,MAAM,CAAC;QAC/B,CAAC;MACH,CAAC,MACI;QACHlB,YAAY,CAAC,qCAAqC,CAAC;QACnDF,YAAY,CAAC,IAAI,CAAC;MACpB;IACF,CAAC,MACI;MACHqB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACxC;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAId,CAAC,IAAK;IAC9BA,CAAC,CAACe,cAAc,CAAC,CAAC;IAClB,IAAIzB,SAAS,KAAK,IAAI,EAAE;MACtB,MAAM0B,QAAQ,GAAG/B,IAAI,CAACgC,IAAI,CAAC3B,SAAS,EAAE;QAAEgB,IAAI,EAAE;MAAS,CAAC,CAAC;MACzD,MAAMY,aAAa,GAAGF,QAAQ,CAACG,UAAU,CAAC,CAAC,CAAC;MAC5C,MAAMC,SAAS,GAAGJ,QAAQ,CAACK,MAAM,CAACH,aAAa,CAAC;MAChD,MAAMI,IAAI,GAAGrC,IAAI,CAACsC,KAAK,CAACC,aAAa,CAACJ,SAAS,CAAC;MAChDzB,YAAY,CAAC2B,IAAI,CAAC;MAClBzB,cAAc,CAAC,CAAC,CAAC;IACnB;EACF,CAAC;EAED,MAAM4B,QAAQ,GAAIC,UAAU,IAAK7B,cAAc,CAAC6B,UAAU,CAAC;EAE3D,MAAMC,eAAe,GAAG/B,WAAW,GAAGE,YAAY;EAClD,MAAM8B,gBAAgB,GAAGD,eAAe,GAAG7B,YAAY;EACvD,MAAM+B,YAAY,GAAGnC,SAAS,IAAIA,SAAS,CAACoC,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;EAEpF,oBACExC,OAAA;IAAK4C,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtB7C,OAAA;MAAA6C,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGnCjD,OAAA;MAAM4C,SAAS,EAAC,wBAAwB;MAACM,QAAQ,EAAEvB,gBAAiB;MAAAkB,QAAA,gBAClE7C,OAAA;QAAOmB,IAAI,EAAC,MAAM;QAACyB,SAAS,EAAC,cAAc;QAACO,QAAQ;QAACC,QAAQ,EAAExC;MAAW;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7EjD,OAAA;QAAQmB,IAAI,EAAC,QAAQ;QAACyB,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACvE5C,SAAS,iBACRL,OAAA;QAAK4C,SAAS,EAAC,oBAAoB;QAACS,IAAI,EAAC,OAAO;QAAAR,QAAA,EAAExC;MAAS;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAClE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,EAGN1C,SAAS,IAAIA,SAAS,CAAC+C,MAAM,GAAG3C,YAAY,iBAC3CX,OAAA;MAAA6C,QAAA,eACE7C,OAAA;QAAI4C,SAAS,EAAC,YAAY;QAAAC,QAAA,EACvBU,KAAK,CAACC,IAAI,CAAC;UAAEF,MAAM,EAAEG,IAAI,CAACC,IAAI,CAACnD,SAAS,CAAC+C,MAAM,GAAG3C,YAAY;QAAE,CAAC,CAAC,CAACgD,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAC/E7D,OAAA;UAAgB4C,SAAS,EAAG,aAAYiB,KAAK,GAAG,CAAC,KAAKpD,WAAW,GAAG,QAAQ,GAAG,EAAG,EAAE;UAAAoC,QAAA,eAClF7C,OAAA;YAAQ4C,SAAS,EAAC,WAAW;YAACkB,OAAO,EAAEA,CAAA,KAAMxB,QAAQ,CAACuB,KAAK,GAAG,CAAC,CAAE;YAAAhB,QAAA,EAC9DgB,KAAK,GAAG;UAAC;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC,GAHFY,KAAK;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN,eAGDjD,OAAA;MAAK4C,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpBH,YAAY,gBACX1C,OAAA;QAAK4C,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/B7C,OAAA;UAAO4C,SAAS,EAAC,OAAO;UAAAC,QAAA,gBACtB7C,OAAA;YAAA6C,QAAA,eACE7C,OAAA;cAAA6C,QAAA,EACGkB,MAAM,CAACC,IAAI,CAACtB,YAAY,CAAC,CAAC,CAAC,CAAC,CAACiB,GAAG,CAAEM,GAAG,iBACpCjE,OAAA;gBAAA6C,QAAA,EAAeoB;cAAG,GAATA,GAAG;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CACxB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRjD,OAAA;YAAA6C,QAAA,EACGH,YAAY,CAACiB,GAAG,CAAC,CAACO,mBAAmB,EAAEL,KAAK,kBAC3C7D,OAAA;cAAA6C,QAAA,EACGkB,MAAM,CAACC,IAAI,CAACE,mBAAmB,CAAC,CAACP,GAAG,CAAEM,GAAG,iBACxCjE,OAAA;gBAAA6C,QAAA,EAAeqB,mBAAmB,CAACD,GAAG;cAAC,GAA9BA,GAAG;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAgC,CAC7C;YAAC,GAHKY,KAAK;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIV,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,gBAENjD,OAAA;QAAA6C,QAAA,EAAK;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IACnC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC/C,EAAA,CAxGQD,GAAG;AAAAkE,EAAA,GAAHlE,GAAG;AA0GZ,eAAeA,GAAG;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}